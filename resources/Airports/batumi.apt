
iata BUS
icao UGSB

rwy1 13
thr_lat 41.616111
thr_lon 41.590278
thr_el 12.0
eor_lat 41.602222
eor_lon 41.610833
eor_el 33.0
td 250			
gs 3.0
true 125.2
dcs_thr_x -355130.3
dcs_thr_y 12.0
dcs_thr_z 616436.1
dcs_eor_x -356537.8
dcs_eor_y 12.0
dcs_eor_z 618404.1

rwy2 31
thr_lat 41.602222
thr_lon 41.610833
thr_el 12.0
eor_lat 41.616111
eor_lon 41.590278
eor_el 33.0
td 250
gs 3.0
true 305.2
dcs_thr_x -356537.8
dcs_thr_y 12.0
dcs_thr_z 618404.1
dcs_eor_x -355130.3
dcs_eor_y 12.0
dcs_eor_z 616436.1

# Explanation of the entries above:

# iata, icao:
# These are the IATA and ICAO names of the airport. These names can be obtained
# from airport charts.

# An airport must contain at least one runway, and at most six. They must
# be named rwy1, rwy2, .., or rwy6. All entries after an rwy entry are
# data for that specific runway. The value is the "name" of the runway. It is
# actually often the rounded value of the magnetic direction divided by 10, but 
# not always.

# thr_lat, thr_lon, thr_el:
# These are the coordinates for the threshold of the runway. The threshold
# is the end point of the runway in the direction of the landing aircraft.
# The format is decimal degrees, and the elevation is in meters. In a perfect world,
# these values can be taken directly from an airport chart, but it is safer to
# actually tax your flight sim aircraft to the point and note the values given
# by the simulator instead. (In DCS, even this is not always enough. See the dcs
# specific entries below.)

# eor_lat, eor_lon, eor_el:
# The eor (end of runway) point is the point where the runway ends, seen from
# the landing aircraft.

# td:
# The value of td is the distance from the threshold to the touchdown point on 
# the runway. The unit is meters. This value differs, but a typical value is 
# in the vicinity of 300 meters.

# gs:
# This is the initial glideslope angle that the PAR simulator will associate with this 
# runway. 
 
# true:
# This is the runway's true heading.

# dcs_thr_x/y/z and dcs_eor_x/y/z:
# It seems that using the approach with the lon-lat coordinats for placing the thr 
# and eor points is not good enough in the case with DCS. The precision of the local
# coordinats given by the DCS simulator just is not good enough, resulting in a
# skewed approach in the simulation. My solution is to use the DCS's local 
# coordinates directly, instead of obtaining them throug the API functions. This
# is by no means an elegant approach, but it seems to do the trick. To obtain the local 
# coordinates, you have to create a mission in which there is only one aircraft 
# present. The local coordinate of that plane will then be presented in the STATUS window
# in the PAR simulator. Then tax your plane to the points of interest, and make a note of 
# the coordinates.
# These entries are optional, but if they exist and DCS is the data source, they will 
# override the lon-lat coordinates entered earlier.
